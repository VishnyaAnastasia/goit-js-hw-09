{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBAE5BD,SAASC,cAAc,UA0BtC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAlCbR,EAAKgB,iBAAiB,UAEtB,SAAqBC,GAEnB,GADAA,EAAMC,iBACFf,EAAWgB,OAAS,GAAKf,EAAUe,OAAS,GAAKd,EAAYc,OAAS,EAEtE,YADFrB,EAAAsB,OAAOC,QAAQ,wBAGjB,IAAIC,GAASnB,EAAWgB,MAExB,IAAK,IAAII,EAAW,EAAGA,IAAalB,EAAYc,MAAOI,GAAY,EACjEjB,EAAciB,EAAUD,GACrBE,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,KACjBV,EAAAsB,OAAOK,QAAQ,uBAAqBlB,QAAiBC,SAAYkB,OAElE,EAAOnB,WAAUC,WAChBV,EAAAsB,OAAMC,QAAC,sBAASd,QAA8BC,SAElDc,IAAiBlB,EAAUe,MAG7BnB,EAAK2B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\nconst button = document.querySelector('button');\n\nform.addEventListener('submit', submitEvent);\n\nfunction submitEvent(event) {\n  event.preventDefault();\n  if (delayInput.value <= 0 || stepInput.value <= 0 || amountInput.value <= 0) {\n    Notify.failure('❌ Values must be > 0');\n    return;\n  }\n  let delay = +delayInput.value;\n\n  for (let position = 1; position <= +amountInput.value; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    delay = delay + +stepInput.value;\n  }\n\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","value","Notify","failure","delay1","position1","then","success","catch","reset"],"version":3,"file":"03-promises.25cdcc67.js.map"}